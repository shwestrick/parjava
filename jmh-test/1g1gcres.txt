# JMH version: 1.21
# VM version: JDK 1.8.0_181, OpenJDK 64-Bit Server VM, 25.181-b13
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -XX:+UseG1GC -XX:ParallelGCThreads=1 -Djava.util.concurrent.ForkJoinPool.common.parallelism=1
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.sample.ConcHashBenchmark.ConcHash

# Run progress: 0.00% complete, ETA 01:23:20
# Fork: 1 of 5
# Warmup Iteration   1: 8.483 s/op
# Warmup Iteration   2: 12.034 s/op
# Warmup Iteration   3: 5.809 s/op
# Warmup Iteration   4: 7.329 s/op
# Warmup Iteration   5: 10.396 s/op
Iteration   1: 17.021 s/op
Iteration   2: 6.494 s/op
Iteration   3: 10.151 s/op
Iteration   4: 17.826 s/op
Iteration   5: 5.863 s/op

# Run progress: 2.00% complete, ETA 02:12:07
# Fork: 2 of 5
# Warmup Iteration   1: 8.603 s/op
# Warmup Iteration   2: 11.372 s/op
# Warmup Iteration   3: 5.257 s/op
# Warmup Iteration   4: 6.572 s/op
# Warmup Iteration   5: 7.497 s/op
Iteration   1: 6.037 s/op
Iteration   2: 10.660 s/op
Iteration   3: 18.617 s/op
Iteration   4: 6.339 s/op
Iteration   5: 10.392 s/op

# Run progress: 4.00% complete, ETA 02:06:03
# Fork: 3 of 5
# Warmup Iteration   1: 7.688 s/op
# Warmup Iteration   2: 12.344 s/op
# Warmup Iteration   3: 5.863 s/op
# Warmup Iteration   4: 7.597 s/op
# Warmup Iteration   5: 7.222 s/op
Iteration   1: 5.433 s/op
Iteration   2: 10.604 s/op
Iteration   3: 18.879 s/op
Iteration   4: 6.502 s/op
Iteration   5: 10.423 s/op

# Run progress: 6.00% complete, ETA 02:02:43
# Fork: 4 of 5
# Warmup Iteration   1: 10.039 s/op
# Warmup Iteration   2: 7.696 s/op
# Warmup Iteration   3: 7.328 s/op
# Warmup Iteration   4: 7.126 s/op
# Warmup Iteration   5: 8.334 s/op
Iteration   1: 6.422 s/op
Iteration   2: 10.544 s/op
Iteration   3: 19.276 s/op
Iteration   4: 6.126 s/op
Iteration   5: 11.011 s/op

# Run progress: 8.00% complete, ETA 02:00:58
# Fork: 5 of 5
# Warmup Iteration   1: 8.275 s/op
# Warmup Iteration   2: 11.691 s/op
# Warmup Iteration   3: 5.459 s/op
# Warmup Iteration   4: 8.033 s/op
# Warmup Iteration   5: 7.082 s/op
Iteration   1: 6.225 s/op
Iteration   2: 10.242 s/op
Iteration   3: 22.729 s/op
Iteration   4: 11.281 s/op
Iteration   5: 10.237 s/op


Result "org.sample.ConcHashBenchmark.ConcHash":
  11.013 ±(99.9%) 3.819 s/op [Average]
  (min, avg, max) = (5.433, 11.013, 22.729), stdev = 5.099
  CI (99.9%): [7.194, 14.833] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_181, OpenJDK 64-Bit Server VM, 25.181-b13
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -XX:+UseG1GC -XX:ParallelGCThreads=1 -Djava.util.concurrent.ForkJoinPool.common.parallelism=1
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.sample.FibBenchmark.Fib

# Run progress: 10.00% complete, ETA 01:57:28
# Fork: 1 of 5
# Warmup Iteration   1: 1.059 s/op
# Warmup Iteration   2: 0.713 s/op
# Warmup Iteration   3: 0.727 s/op
# Warmup Iteration   4: 0.734 s/op
# Warmup Iteration   5: 0.715 s/op
Iteration   1: 0.713 s/op
Iteration   2: 0.732 s/op
Iteration   3: 0.687 s/op
Iteration   4: 0.711 s/op
Iteration   5: 0.687 s/op

# Run progress: 12.00% complete, ETA 01:48:29
# Fork: 2 of 5
# Warmup Iteration   1: 1.059 s/op
# Warmup Iteration   2: 0.909 s/op
# Warmup Iteration   3: 0.815 s/op
# Warmup Iteration   4: 0.753 s/op
# Warmup Iteration   5: 0.778 s/op
Iteration   1: 0.756 s/op
Iteration   2: 0.703 s/op
Iteration   3: 0.802 s/op
Iteration   4: 0.794 s/op
Iteration   5: 0.779 s/op

# Run progress: 14.00% complete, ETA 01:41:33
# Fork: 3 of 5
# Warmup Iteration   1: 0.757 s/op
# Warmup Iteration   2: 0.763 s/op
# Warmup Iteration   3: 0.890 s/op
# Warmup Iteration   4: 0.755 s/op
# Warmup Iteration   5: 0.803 s/op
Iteration   1: 0.808 s/op
Iteration   2: 0.874 s/op
Iteration   3: 0.843 s/op
Iteration   4: 0.815 s/op
Iteration   5: 0.743 s/op

# Run progress: 16.00% complete, ETA 01:36:01
# Fork: 4 of 5
# Warmup Iteration   1: 0.970 s/op
# Warmup Iteration   2: 0.809 s/op
# Warmup Iteration   3: 0.963 s/op
# Warmup Iteration   4: 0.751 s/op
# Warmup Iteration   5: 0.839 s/op
Iteration   1: 0.761 s/op
Iteration   2: 0.777 s/op
Iteration   3: 0.746 s/op
Iteration   4: 0.856 s/op
Iteration   5: 0.788 s/op

# Run progress: 18.00% complete, ETA 01:31:15
# Fork: 5 of 5
# Warmup Iteration   1: 0.868 s/op
# Warmup Iteration   2: 0.745 s/op
# Warmup Iteration   3: 0.771 s/op
# Warmup Iteration   4: 0.787 s/op
# Warmup Iteration   5: 0.803 s/op
Iteration   1: 0.820 s/op
Iteration   2: 0.911 s/op
Iteration   3: 0.800 s/op
Iteration   4: 0.738 s/op
Iteration   5: 0.926 s/op


Result "org.sample.FibBenchmark.Fib":
  0.783 ±(99.9%) 0.049 s/op [Average]
  (min, avg, max) = (0.687, 0.783, 0.926), stdev = 0.065
  CI (99.9%): [0.734, 0.831] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_181, OpenJDK 64-Bit Server VM, 25.181-b13
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -XX:+UseG1GC -XX:ParallelGCThreads=1 -Djava.util.concurrent.ForkJoinPool.common.parallelism=1
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.sample.FilterBenchmark.Filter

# Run progress: 20.00% complete, ETA 01:27:06
# Fork: 1 of 5
# Warmup Iteration   1: 0.315 s/op
# Warmup Iteration   2: 0.403 s/op
# Warmup Iteration   3: 0.292 s/op
# Warmup Iteration   4: 0.570 s/op
# Warmup Iteration   5: 0.279 s/op
Iteration   1: 0.258 s/op
Iteration   2: 0.256 s/op
Iteration   3: 0.298 s/op
Iteration   4: 0.247 s/op
Iteration   5: 0.246 s/op

# Run progress: 22.00% complete, ETA 01:23:35
# Fork: 2 of 5
# Warmup Iteration   1: 0.310 s/op
# Warmup Iteration   2: 0.465 s/op
# Warmup Iteration   3: 0.253 s/op
# Warmup Iteration   4: 0.792 s/op
# Warmup Iteration   5: 0.249 s/op
Iteration   1: 0.253 s/op
Iteration   2: 0.266 s/op
Iteration   3: 0.305 s/op
Iteration   4: 0.278 s/op
Iteration   5: 0.310 s/op

# Run progress: 24.00% complete, ETA 01:20:26
# Fork: 3 of 5
# Warmup Iteration   1: 0.292 s/op
# Warmup Iteration   2: 0.440 s/op
# Warmup Iteration   3: 0.305 s/op
# Warmup Iteration   4: 0.482 s/op
# Warmup Iteration   5: 0.287 s/op
Iteration   1: 0.257 s/op
Iteration   2: 0.260 s/op
Iteration   3: 0.281 s/op
Iteration   4: 0.265 s/op
Iteration   5: 0.278 s/op

# Run progress: 26.00% complete, ETA 01:17:24
# Fork: 4 of 5
# Warmup Iteration   1: 0.304 s/op
# Warmup Iteration   2: 0.418 s/op
# Warmup Iteration   3: 0.272 s/op
# Warmup Iteration   4: 0.502 s/op
# Warmup Iteration   5: 0.286 s/op
Iteration   1: 0.256 s/op
Iteration   2: 0.274 s/op
Iteration   3: 0.262 s/op
Iteration   4: 0.264 s/op
Iteration   5: 0.273 s/op

# Run progress: 28.00% complete, ETA 01:14:31
# Fork: 5 of 5
# Warmup Iteration   1: 0.319 s/op
# Warmup Iteration   2: 0.432 s/op
# Warmup Iteration   3: 0.296 s/op
# Warmup Iteration   4: 0.459 s/op
# Warmup Iteration   5: 0.287 s/op
Iteration   1: 0.283 s/op
Iteration   2: 0.290 s/op
Iteration   3: 0.305 s/op
Iteration   4: 0.279 s/op
Iteration   5: 0.285 s/op


Result "org.sample.FilterBenchmark.Filter":
  0.273 ±(99.9%) 0.014 s/op [Average]
  (min, avg, max) = (0.246, 0.273, 0.310), stdev = 0.018
  CI (99.9%): [0.259, 0.287] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_181, OpenJDK 64-Bit Server VM, 25.181-b13
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -XX:+UseG1GC -XX:ParallelGCThreads=1 -Djava.util.concurrent.ForkJoinPool.common.parallelism=1
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.sample.HistogramBenchmark.Histogram

# Run progress: 30.00% complete, ETA 01:11:51
# Fork: 1 of 5
# Warmup Iteration   1: 11.657 s/op
# Warmup Iteration   2: 10.659 s/op
# Warmup Iteration   3: 7.075 s/op
# Warmup Iteration   4: 12.938 s/op
# Warmup Iteration   5: 7.021 s/op
Iteration   1: 7.840 s/op
Iteration   2: 19.036 s/op
Iteration   3: 11.352 s/op
Iteration   4: 14.922 s/op
Iteration   5: 7.430 s/op

# Run progress: 32.00% complete, ETA 01:10:38
# Fork: 2 of 5
# Warmup Iteration   1: 12.283 s/op
# Warmup Iteration   2: 11.196 s/op
# Warmup Iteration   3: 6.693 s/op
# Warmup Iteration   4: 10.908 s/op
# Warmup Iteration   5: 6.572 s/op
Iteration   1: 7.207 s/op
Iteration   2: 17.538 s/op
Iteration   3: 7.006 s/op
Iteration   4: 11.093 s/op
Iteration   5: 13.448 s/op

# Run progress: 34.00% complete, ETA 01:08:58
# Fork: 3 of 5
# Warmup Iteration   1: 10.434 s/op
# Warmup Iteration   2: 6.207 s/op
# Warmup Iteration   3: 10.842 s/op
# Warmup Iteration   4: 10.606 s/op
# Warmup Iteration   5: 7.209 s/op
Iteration   1: 7.735 s/op
Iteration   2: 20.931 s/op
Iteration   3: 11.187 s/op
Iteration   4: 14.321 s/op
Iteration   5: 7.131 s/op

# Run progress: 36.00% complete, ETA 01:07:21
# Fork: 4 of 5
# Warmup Iteration   1: 10.578 s/op
# Warmup Iteration   2: 5.775 s/op
# Warmup Iteration   3: 11.002 s/op
# Warmup Iteration   4: 11.133 s/op
# Warmup Iteration   5: 6.121 s/op
Iteration   1: 6.608 s/op
Iteration   2: 22.228 s/op
Iteration   3: 10.984 s/op
Iteration   4: 14.806 s/op
Iteration   5: 7.245 s/op

# Run progress: 38.00% complete, ETA 01:05:36
# Fork: 5 of 5
# Warmup Iteration   1: 10.951 s/op
# Warmup Iteration   2: 5.416 s/op
# Warmup Iteration   3: 10.307 s/op
# Warmup Iteration   4: 11.682 s/op
# Warmup Iteration   5: 7.492 s/op
Iteration   1: 7.771 s/op
Iteration   2: 19.573 s/op
Iteration   3: 11.645 s/op
Iteration   4: 15.072 s/op
Iteration   5: 7.472 s/op


Result "org.sample.HistogramBenchmark.Histogram":
  12.063 ±(99.9%) 3.671 s/op [Average]
  (min, avg, max) = (6.608, 12.063, 22.228), stdev = 4.900
  CI (99.9%): [8.393, 15.734] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_181, OpenJDK 64-Bit Server VM, 25.181-b13
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -XX:+UseG1GC -XX:ParallelGCThreads=1 -Djava.util.concurrent.ForkJoinPool.common.parallelism=1
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.sample.MapMutBenchmark.MapMut

# Run progress: 40.00% complete, ETA 01:03:53
# Fork: 1 of 5
# Warmup Iteration   1: 2.729 s/op
# Warmup Iteration   2: 2.904 s/op
# Warmup Iteration   3: 2.905 s/op
# Warmup Iteration   4: 2.219 s/op
# Warmup Iteration   5: 2.512 s/op
Iteration   1: 2.693 s/op
Iteration   2: 2.371 s/op
Iteration   3: 2.722 s/op
Iteration   4: 2.182 s/op
Iteration   5: 2.291 s/op

# Run progress: 42.00% complete, ETA 01:01:45
# Fork: 2 of 5
# Warmup Iteration   1: 3.483 s/op
# Warmup Iteration   2: 3.373 s/op
# Warmup Iteration   3: 3.070 s/op
# Warmup Iteration   4: 2.252 s/op
# Warmup Iteration   5: 2.959 s/op
Iteration   1: 2.537 s/op
Iteration   2: 2.837 s/op
Iteration   3: 2.335 s/op
Iteration   4: 2.573 s/op
Iteration   5: 2.261 s/op

# Run progress: 44.00% complete, ETA 00:59:38
# Fork: 3 of 5
# Warmup Iteration   1: 3.743 s/op
# Warmup Iteration   2: 3.170 s/op
# Warmup Iteration   3: 2.998 s/op
# Warmup Iteration   4: 2.137 s/op
# Warmup Iteration   5: 2.995 s/op
Iteration   1: 2.376 s/op
Iteration   2: 2.605 s/op
Iteration   3: 2.284 s/op
Iteration   4: 2.271 s/op
Iteration   5: 2.230 s/op

# Run progress: 46.00% complete, ETA 00:57:31
# Fork: 4 of 5
# Warmup Iteration   1: 3.469 s/op
# Warmup Iteration   2: 3.414 s/op
# Warmup Iteration   3: 3.255 s/op
# Warmup Iteration   4: 2.305 s/op
# Warmup Iteration   5: 3.134 s/op
Iteration   1: 2.470 s/op
Iteration   2: 2.702 s/op
Iteration   3: 2.459 s/op
Iteration   4: 2.439 s/op
Iteration   5: 2.395 s/op

# Run progress: 48.00% complete, ETA 00:55:29
# Fork: 5 of 5
# Warmup Iteration   1: 3.194 s/op
# Warmup Iteration   2: 3.085 s/op
# Warmup Iteration   3: 2.994 s/op
# Warmup Iteration   4: 2.267 s/op
# Warmup Iteration   5: 2.922 s/op
Iteration   1: 2.528 s/op
Iteration   2: 2.451 s/op
Iteration   3: 2.378 s/op
Iteration   4: 2.350 s/op
Iteration   5: 2.445 s/op


Result "org.sample.MapMutBenchmark.MapMut":
  2.447 ±(99.9%) 0.126 s/op [Average]
  (min, avg, max) = (2.182, 2.447, 2.837), stdev = 0.169
  CI (99.9%): [2.321, 2.574] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_181, OpenJDK 64-Bit Server VM, 25.181-b13
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -XX:+UseG1GC -XX:ParallelGCThreads=1 -Djava.util.concurrent.ForkJoinPool.common.parallelism=1
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.sample.MatrixMultiplyBenchmark.MatrixMultiply

# Run progress: 50.00% complete, ETA 00:53:21
# Fork: 1 of 5
# Warmup Iteration   1: 5.834 s/op
# Warmup Iteration   2: 5.732 s/op
# Warmup Iteration   3: 5.056 s/op
# Warmup Iteration   4: 5.124 s/op
# Warmup Iteration   5: 5.114 s/op
Iteration   1: 5.256 s/op
Iteration   2: 5.063 s/op
Iteration   3: 5.113 s/op
Iteration   4: 5.068 s/op
Iteration   5: 5.151 s/op

# Run progress: 52.00% complete, ETA 00:50:53
# Fork: 2 of 5
# Warmup Iteration   1: 5.875 s/op
# Warmup Iteration   2: 5.610 s/op
# Warmup Iteration   3: 5.174 s/op
# Warmup Iteration   4: 5.071 s/op
# Warmup Iteration   5: 5.127 s/op
Iteration   1: 5.263 s/op
Iteration   2: 5.109 s/op
Iteration   3: 5.309 s/op
Iteration   4: 5.301 s/op
Iteration   5: 5.313 s/op

# Run progress: 54.00% complete, ETA 00:48:30
# Fork: 3 of 5
# Warmup Iteration   1: 5.475 s/op
# Warmup Iteration   2: 5.322 s/op
# Warmup Iteration   3: 5.104 s/op
# Warmup Iteration   4: 5.307 s/op
# Warmup Iteration   5: 5.160 s/op
Iteration   1: 5.389 s/op
Iteration   2: 5.108 s/op
Iteration   3: 5.145 s/op
Iteration   4: 5.111 s/op
Iteration   5: 5.181 s/op

# Run progress: 56.00% complete, ETA 00:46:07
# Fork: 4 of 5
# Warmup Iteration   1: 5.871 s/op
# Warmup Iteration   2: 5.742 s/op
# Warmup Iteration   3: 5.419 s/op
# Warmup Iteration   4: 5.088 s/op
# Warmup Iteration   5: 5.285 s/op
Iteration   1: 5.344 s/op
Iteration   2: 5.127 s/op
Iteration   3: 5.343 s/op
Iteration   4: 5.424 s/op
Iteration   5: 5.269 s/op

# Run progress: 58.00% complete, ETA 00:43:50
# Fork: 5 of 5
# Warmup Iteration   1: 6.166 s/op
# Warmup Iteration   2: 5.528 s/op
# Warmup Iteration   3: 5.158 s/op
# Warmup Iteration   4: 5.121 s/op
# Warmup Iteration   5: 5.212 s/op
Iteration   1: 5.329 s/op
Iteration   2: 5.172 s/op
Iteration   3: 5.508 s/op
Iteration   4: 5.436 s/op
Iteration   5: 5.403 s/op


Result "org.sample.MatrixMultiplyBenchmark.MatrixMultiply":
  5.249 ±(99.9%) 0.097 s/op [Average]
  (min, avg, max) = (5.063, 5.249, 5.508), stdev = 0.129
  CI (99.9%): [5.152, 5.346] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_181, OpenJDK 64-Bit Server VM, 25.181-b13
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -XX:+UseG1GC -XX:ParallelGCThreads=1 -Djava.util.concurrent.ForkJoinPool.common.parallelism=1
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.sample.ReduceBenchmark.Reduce

# Run progress: 60.00% complete, ETA 00:41:34
# Fork: 1 of 5
# Warmup Iteration   1: 1.922 s/op
# Warmup Iteration   2: 1.651 s/op
# Warmup Iteration   3: 1.769 s/op
# Warmup Iteration   4: 1.745 s/op
# Warmup Iteration   5: 1.818 s/op
Iteration   1: 1.780 s/op
Iteration   2: 1.676 s/op
Iteration   3: 1.702 s/op
Iteration   4: 1.867 s/op
Iteration   5: 1.821 s/op

# Run progress: 62.00% complete, ETA 00:39:22
# Fork: 2 of 5
# Warmup Iteration   1: 2.118 s/op
# Warmup Iteration   2: 1.790 s/op
# Warmup Iteration   3: 1.777 s/op
# Warmup Iteration   4: 1.683 s/op
# Warmup Iteration   5: 1.855 s/op
Iteration   1: 1.786 s/op
Iteration   2: 1.840 s/op
Iteration   3: 1.675 s/op
Iteration   4: 1.703 s/op
Iteration   5: 1.706 s/op

# Run progress: 64.00% complete, ETA 00:37:09
# Fork: 3 of 5
# Warmup Iteration   1: 2.157 s/op
# Warmup Iteration   2: 1.776 s/op
# Warmup Iteration   3: 1.682 s/op
# Warmup Iteration   4: 1.678 s/op
# Warmup Iteration   5: 1.611 s/op
Iteration   1: 1.692 s/op
Iteration   2: 1.687 s/op
Iteration   3: 1.714 s/op
Iteration   4: 1.493 s/op
Iteration   5: 1.579 s/op

# Run progress: 66.00% complete, ETA 00:34:58
# Fork: 4 of 5
# Warmup Iteration   1: 2.121 s/op
# Warmup Iteration   2: 1.512 s/op
# Warmup Iteration   3: 1.593 s/op
# Warmup Iteration   4: 1.678 s/op
# Warmup Iteration   5: 1.634 s/op
Iteration   1: 1.838 s/op
Iteration   2: 1.926 s/op
Iteration   3: 1.781 s/op
Iteration   4: 1.698 s/op
Iteration   5: 1.833 s/op

# Run progress: 68.00% complete, ETA 00:32:49
# Fork: 5 of 5
# Warmup Iteration   1: 2.051 s/op
# Warmup Iteration   2: 1.680 s/op
# Warmup Iteration   3: 1.399 s/op
# Warmup Iteration   4: 1.449 s/op
# Warmup Iteration   5: 1.700 s/op
Iteration   1: 1.683 s/op
Iteration   2: 1.551 s/op
Iteration   3: 1.624 s/op
Iteration   4: 1.914 s/op
Iteration   5: 1.674 s/op


Result "org.sample.ReduceBenchmark.Reduce":
  1.730 ±(99.9%) 0.081 s/op [Average]
  (min, avg, max) = (1.493, 1.730, 1.926), stdev = 0.108
  CI (99.9%): [1.649, 1.811] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_181, OpenJDK 64-Bit Server VM, 25.181-b13
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -XX:+UseG1GC -XX:ParallelGCThreads=1 -Djava.util.concurrent.ForkJoinPool.common.parallelism=1
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.sample.ScanBenchmark.Scan

# Run progress: 70.00% complete, ETA 00:30:40
# Fork: 1 of 5
# Warmup Iteration   1: 7.029 s/op
# Warmup Iteration   2: 6.575 s/op
# Warmup Iteration   3: 6.605 s/op
# Warmup Iteration   4: 6.672 s/op
# Warmup Iteration   5: 5.810 s/op
Iteration   1: 5.707 s/op
Iteration   2: 5.124 s/op
Iteration   3: 5.597 s/op
Iteration   4: 6.527 s/op
Iteration   5: 5.145 s/op

# Run progress: 72.00% complete, ETA 00:28:39
# Fork: 2 of 5
# Warmup Iteration   1: 6.173 s/op
# Warmup Iteration   2: 5.835 s/op
# Warmup Iteration   3: 5.014 s/op
# Warmup Iteration   4: 5.493 s/op
# Warmup Iteration   5: 5.233 s/op
Iteration   1: 5.343 s/op
Iteration   2: 5.951 s/op
Iteration   3: 5.248 s/op
Iteration   4: 5.402 s/op
Iteration   5: 5.722 s/op

# Run progress: 74.00% complete, ETA 00:26:37
# Fork: 3 of 5
# Warmup Iteration   1: 6.026 s/op
# Warmup Iteration   2: 5.412 s/op
# Warmup Iteration   3: 5.704 s/op
# Warmup Iteration   4: 5.695 s/op
# Warmup Iteration   5: 5.163 s/op
Iteration   1: 5.942 s/op
Iteration   2: 5.406 s/op
Iteration   3: 5.817 s/op
Iteration   4: 5.179 s/op
Iteration   5: 5.694 s/op

# Run progress: 76.00% complete, ETA 00:24:34
# Fork: 4 of 5
# Warmup Iteration   1: 5.799 s/op
# Warmup Iteration   2: 5.327 s/op
# Warmup Iteration   3: 5.345 s/op
# Warmup Iteration   4: 5.378 s/op
# Warmup Iteration   5: 4.960 s/op
Iteration   1: 5.086 s/op
Iteration   2: 5.643 s/op
Iteration   3: 4.788 s/op
Iteration   4: 4.756 s/op
Iteration   5: 5.472 s/op

# Run progress: 78.00% complete, ETA 00:22:31
# Fork: 5 of 5
# Warmup Iteration   1: 5.315 s/op
# Warmup Iteration   2: 5.488 s/op
# Warmup Iteration   3: 5.500 s/op
# Warmup Iteration   4: 6.178 s/op
# Warmup Iteration   5: 6.098 s/op
Iteration   1: 5.039 s/op
Iteration   2: 5.083 s/op
Iteration   3: 5.340 s/op
Iteration   4: 5.439 s/op
Iteration   5: 5.084 s/op


Result "org.sample.ScanBenchmark.Scan":
  5.421 ±(99.9%) 0.300 s/op [Average]
  (min, avg, max) = (4.756, 5.421, 6.527), stdev = 0.401
  CI (99.9%): [5.121, 5.722] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_181, OpenJDK 64-Bit Server VM, 25.181-b13
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -XX:+UseG1GC -XX:ParallelGCThreads=1 -Djava.util.concurrent.ForkJoinPool.common.parallelism=1
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.sample.SortBenchmark.Sort

# Run progress: 80.00% complete, ETA 00:20:27
# Fork: 1 of 5
# Warmup Iteration   1: 11.498 s/op
# Warmup Iteration   2: 11.165 s/op
# Warmup Iteration   3: 11.790 s/op
# Warmup Iteration   4: 11.273 s/op
# Warmup Iteration   5: 11.880 s/op
Iteration   1: 13.963 s/op
Iteration   2: 12.991 s/op
Iteration   3: 11.618 s/op
Iteration   4: 11.225 s/op
Iteration   5: 11.461 s/op

# Run progress: 82.00% complete, ETA 00:18:33
# Fork: 2 of 5
# Warmup Iteration   1: 11.390 s/op
# Warmup Iteration   2: 10.754 s/op
# Warmup Iteration   3: 11.378 s/op
# Warmup Iteration   4: 10.711 s/op
# Warmup Iteration   5: 11.303 s/op
Iteration   1: 12.135 s/op
Iteration   2: 11.750 s/op
Iteration   3: 11.056 s/op
Iteration   4: 12.318 s/op
Iteration   5: 11.148 s/op

# Run progress: 84.00% complete, ETA 00:16:36
# Fork: 3 of 5
# Warmup Iteration   1: 12.177 s/op
# Warmup Iteration   2: 12.080 s/op
# Warmup Iteration   3: 12.380 s/op
# Warmup Iteration   4: 11.369 s/op
# Warmup Iteration   5: 10.897 s/op
Iteration   1: 12.242 s/op
Iteration   2: 12.123 s/op
Iteration   3: 11.186 s/op
Iteration   4: 11.022 s/op
Iteration   5: 11.265 s/op

# Run progress: 86.00% complete, ETA 00:14:37
# Fork: 4 of 5
# Warmup Iteration   1: 11.052 s/op
# Warmup Iteration   2: 10.824 s/op
# Warmup Iteration   3: 12.382 s/op
# Warmup Iteration   4: 10.795 s/op
# Warmup Iteration   5: 11.154 s/op
Iteration   1: 12.655 s/op
Iteration   2: 11.760 s/op
Iteration   3: 10.928 s/op
Iteration   4: 11.476 s/op
Iteration   5: 11.290 s/op

# Run progress: 88.00% complete, ETA 00:12:36
# Fork: 5 of 5
# Warmup Iteration   1: 11.392 s/op
# Warmup Iteration   2: 10.538 s/op
# Warmup Iteration   3: 11.252 s/op
# Warmup Iteration   4: 10.943 s/op
# Warmup Iteration   5: 11.113 s/op
Iteration   1: 11.397 s/op
Iteration   2: 11.656 s/op
Iteration   3: 10.869 s/op
Iteration   4: 11.974 s/op
Iteration   5: 11.371 s/op


Result "org.sample.SortBenchmark.Sort":
  11.715 ±(99.9%) 0.539 s/op [Average]
  (min, avg, max) = (10.869, 11.715, 13.963), stdev = 0.720
  CI (99.9%): [11.176, 12.255] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_181, OpenJDK 64-Bit Server VM, 25.181-b13
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -XX:+UseG1GC -XX:ParallelGCThreads=1 -Djava.util.concurrent.ForkJoinPool.common.parallelism=1
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.sample.TabulateBenchmark.Tabulate

# Run progress: 90.00% complete, ETA 00:10:33
# Fork: 1 of 5
# Warmup Iteration   1: 3.117 s/op
# Warmup Iteration   2: 2.418 s/op
# Warmup Iteration   3: 2.422 s/op
# Warmup Iteration   4: 2.250 s/op
# Warmup Iteration   5: 2.044 s/op
Iteration   1: 2.275 s/op
Iteration   2: 2.312 s/op
Iteration   3: 2.083 s/op
Iteration   4: 2.360 s/op
Iteration   5: 2.122 s/op

# Run progress: 92.00% complete, ETA 00:08:25
# Fork: 2 of 5
# Warmup Iteration   1: 2.875 s/op
# Warmup Iteration   2: 2.314 s/op
# Warmup Iteration   3: 2.305 s/op
# Warmup Iteration   4: 2.111 s/op
# Warmup Iteration   5: 1.920 s/op
Iteration   1: 2.013 s/op
Iteration   2: 2.133 s/op
Iteration   3: 1.898 s/op
Iteration   4: 2.084 s/op
Iteration   5: 2.069 s/op

# Run progress: 94.00% complete, ETA 00:06:18
# Fork: 3 of 5
# Warmup Iteration   1: 3.292 s/op
# Warmup Iteration   2: 2.835 s/op
# Warmup Iteration   3: 2.679 s/op
# Warmup Iteration   4: 2.701 s/op
# Warmup Iteration   5: 2.552 s/op
Iteration   1: 2.184 s/op
Iteration   2: 2.254 s/op
Iteration   3: 2.511 s/op
Iteration   4: 2.286 s/op
Iteration   5: 2.546 s/op

# Run progress: 96.00% complete, ETA 00:04:11
# Fork: 4 of 5
# Warmup Iteration   1: 3.311 s/op
# Warmup Iteration   2: 2.858 s/op
# Warmup Iteration   3: 2.502 s/op
# Warmup Iteration   4: 2.722 s/op
# Warmup Iteration   5: 2.461 s/op
Iteration   1: 2.415 s/op
Iteration   2: 2.275 s/op
Iteration   3: 2.456 s/op
Iteration   4: 2.150 s/op
Iteration   5: 2.366 s/op

# Run progress: 98.00% complete, ETA 00:02:05
# Fork: 5 of 5
# Warmup Iteration   1: 3.013 s/op
# Warmup Iteration   2: 2.400 s/op
# Warmup Iteration   3: 2.603 s/op
# Warmup Iteration   4: 2.258 s/op
# Warmup Iteration   5: 2.185 s/op
Iteration   1: 2.234 s/op
Iteration   2: 2.331 s/op
Iteration   3: 2.170 s/op
Iteration   4: 2.142 s/op
Iteration   5: 1.865 s/op


Result "org.sample.TabulateBenchmark.Tabulate":
  2.221 ±(99.9%) 0.130 s/op [Average]
  (min, avg, max) = (1.865, 2.221, 2.546), stdev = 0.174
  CI (99.9%): [2.091, 2.351] (assumes normal distribution)


# Run complete. Total time: 01:44:39

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                               Mode  Cnt   Score   Error  Units
ConcHashBenchmark.ConcHash              avgt   25  11.013 ± 3.819   s/op
FibBenchmark.Fib                        avgt   25   0.783 ± 0.049   s/op
FilterBenchmark.Filter                  avgt   25   0.273 ± 0.014   s/op
HistogramBenchmark.Histogram            avgt   25  12.063 ± 3.671   s/op
MapMutBenchmark.MapMut                  avgt   25   2.447 ± 0.126   s/op
MatrixMultiplyBenchmark.MatrixMultiply  avgt   25   5.249 ± 0.097   s/op
ReduceBenchmark.Reduce                  avgt   25   1.730 ± 0.081   s/op
ScanBenchmark.Scan                      avgt   25   5.421 ± 0.300   s/op
SortBenchmark.Sort                      avgt   25  11.715 ± 0.539   s/op
TabulateBenchmark.Tabulate              avgt   25   2.221 ± 0.130   s/op
