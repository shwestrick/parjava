# JMH version: 1.21
# VM version: JDK 1.8.0_181, OpenJDK 64-Bit Server VM, 25.181-b13
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -XX:+UseParallelGC -XX:ParallelGCThreads=72 -Djava.util.concurrent.ForkJoinPool.common.parallelism=72
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.sample.ConcHashBenchmark.ConcHash

# Run progress: 0.00% complete, ETA 01:23:20
# Fork: 1 of 5
# Warmup Iteration   1: 22.057 s/op
# Warmup Iteration   2: 1.653 s/op
# Warmup Iteration   3: 2.782 s/op
# Warmup Iteration   4: 2.825 s/op
# Warmup Iteration   5: 0.779 s/op
Iteration   1: 0.350 s/op
Iteration   2: 0.327 s/op
Iteration   3: 0.351 s/op
Iteration   4: 0.330 s/op
Iteration   5: 0.342 s/op

# Run progress: 2.00% complete, ETA 02:06:01
# Fork: 2 of 5
# Warmup Iteration   1: 5.860 s/op
# Warmup Iteration   2: 5.166 s/op
# Warmup Iteration   3: 5.063 s/op
# Warmup Iteration   4: 4.430 s/op
# Warmup Iteration   5: 1.940 s/op
Iteration   1: 2.834 s/op
Iteration   2: 1.050 s/op
Iteration   3: 1.288 s/op
Iteration   4: 0.870 s/op
Iteration   5: 0.374 s/op

# Run progress: 4.00% complete, ETA 02:25:28
# Fork: 3 of 5
# Warmup Iteration   1: 4.849 s/op
# Warmup Iteration   2: 3.462 s/op
# Warmup Iteration   3: 3.077 s/op
# Warmup Iteration   4: 3.868 s/op
# Warmup Iteration   5: 3.313 s/op
Iteration   1: 3.370 s/op
Iteration   2: 0.644 s/op
Iteration   3: 1.467 s/op
Iteration   4: 2.159 s/op
Iteration   5: 1.091 s/op

# Run progress: 6.00% complete, ETA 02:27:12
# Fork: 4 of 5
# Warmup Iteration   1: 4.106 s/op
# Warmup Iteration   2: 1.690 s/op
# Warmup Iteration   3: 4.019 s/op
# Warmup Iteration   4: 2.744 s/op
# Warmup Iteration   5: 2.469 s/op
Iteration   1: 1.307 s/op
Iteration   2: 1.795 s/op
Iteration   3: 1.699 s/op
Iteration   4: 0.360 s/op
Iteration   5: 0.377 s/op

# Run progress: 8.00% complete, ETA 02:28:18
# Fork: 5 of 5
# Warmup Iteration   1: 4.390 s/op
# Warmup Iteration   2: 3.777 s/op
# Warmup Iteration   3: 2.608 s/op
# Warmup Iteration   4: 1.819 s/op
# Warmup Iteration   5: 1.255 s/op
Iteration   1: 1.536 s/op
Iteration   2: 0.403 s/op
Iteration   3: 0.329 s/op
Iteration   4: 0.341 s/op
Iteration   5: 0.339 s/op


Result "org.sample.ConcHashBenchmark.ConcHash":
  1.013 ±(99.9%) 0.636 s/op [Average]
  (min, avg, max) = (0.327, 1.013, 3.370), stdev = 0.850
  CI (99.9%): [0.377, 1.650] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_181, OpenJDK 64-Bit Server VM, 25.181-b13
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -XX:+UseParallelGC -XX:ParallelGCThreads=72 -Djava.util.concurrent.ForkJoinPool.common.parallelism=72
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.sample.FibBenchmark.Fib

# Run progress: 10.00% complete, ETA 02:26:00
# Fork: 1 of 5
# Warmup Iteration   1: 0.029 s/op
# Warmup Iteration   2: 0.027 s/op
# Warmup Iteration   3: 0.027 s/op
# Warmup Iteration   4: 0.027 s/op
# Warmup Iteration   5: 0.027 s/op
Iteration   1: 0.028 s/op
Iteration   2: 0.028 s/op
Iteration   3: 0.027 s/op
Iteration   4: 0.027 s/op
Iteration   5: 0.028 s/op

# Run progress: 12.00% complete, ETA 02:11:18
# Fork: 2 of 5
# Warmup Iteration   1: 0.029 s/op
# Warmup Iteration   2: 0.028 s/op
# Warmup Iteration   3: 0.027 s/op
# Warmup Iteration   4: 0.028 s/op
# Warmup Iteration   5: 0.027 s/op
Iteration   1: 0.028 s/op
Iteration   2: 0.027 s/op
Iteration   3: 0.027 s/op
Iteration   4: 0.027 s/op
Iteration   5: 0.029 s/op

# Run progress: 14.00% complete, ETA 02:00:18
# Fork: 3 of 5
# Warmup Iteration   1: 0.028 s/op
# Warmup Iteration   2: 0.026 s/op
# Warmup Iteration   3: 0.026 s/op
# Warmup Iteration   4: 0.027 s/op
# Warmup Iteration   5: 0.027 s/op
Iteration   1: 0.027 s/op
Iteration   2: 0.027 s/op
Iteration   3: 0.027 s/op
Iteration   4: 0.027 s/op
Iteration   5: 0.027 s/op

# Run progress: 16.00% complete, ETA 01:51:38
# Fork: 4 of 5
# Warmup Iteration   1: 0.029 s/op
# Warmup Iteration   2: 0.028 s/op
# Warmup Iteration   3: 0.027 s/op
# Warmup Iteration   4: 0.028 s/op
# Warmup Iteration   5: 0.029 s/op
Iteration   1: 0.028 s/op
Iteration   2: 0.028 s/op
Iteration   3: 0.027 s/op
Iteration   4: 0.027 s/op
Iteration   5: 0.027 s/op

# Run progress: 18.00% complete, ETA 01:44:32
# Fork: 5 of 5
# Warmup Iteration   1: 0.029 s/op
# Warmup Iteration   2: 0.028 s/op
# Warmup Iteration   3: 0.027 s/op
# Warmup Iteration   4: 0.027 s/op
# Warmup Iteration   5: 0.027 s/op
Iteration   1: 0.028 s/op
Iteration   2: 0.027 s/op
Iteration   3: 0.027 s/op
Iteration   4: 0.027 s/op
Iteration   5: 0.028 s/op


Result "org.sample.FibBenchmark.Fib":
  0.027 ±(99.9%) 0.001 s/op [Average]
  (min, avg, max) = (0.027, 0.027, 0.029), stdev = 0.001
  CI (99.9%): [0.027, 0.028] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_181, OpenJDK 64-Bit Server VM, 25.181-b13
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -XX:+UseParallelGC -XX:ParallelGCThreads=72 -Djava.util.concurrent.ForkJoinPool.common.parallelism=72
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.sample.FilterBenchmark.Filter

# Run progress: 20.00% complete, ETA 01:38:31
# Fork: 1 of 5
# Warmup Iteration   1: 0.048 s/op
# Warmup Iteration   2: 0.037 s/op
# Warmup Iteration   3: 0.036 s/op
# Warmup Iteration   4: 0.039 s/op
# Warmup Iteration   5: 0.027 s/op
Iteration   1: 0.028 s/op
Iteration   2: 0.028 s/op
Iteration   3: 0.029 s/op
Iteration   4: 0.030 s/op
Iteration   5: 0.031 s/op

# Run progress: 22.00% complete, ETA 01:36:28
# Fork: 2 of 5
# Warmup Iteration   1: 0.066 s/op
# Warmup Iteration   2: 0.047 s/op
# Warmup Iteration   3: 0.029 s/op
# Warmup Iteration   4: 0.036 s/op
# Warmup Iteration   5: 0.031 s/op
Iteration   1: 0.029 s/op
Iteration   2: 0.029 s/op
Iteration   3: 0.029 s/op
Iteration   4: 0.029 s/op
Iteration   5: 0.030 s/op

# Run progress: 24.00% complete, ETA 01:34:44
# Fork: 3 of 5
# Warmup Iteration   1: 0.070 s/op
# Warmup Iteration   2: 0.077 s/op
# Warmup Iteration   3: 0.034 s/op
# Warmup Iteration   4: 0.047 s/op
# Warmup Iteration   5: 0.034 s/op
Iteration   1: 0.049 s/op
Iteration   2: 0.032 s/op
Iteration   3: 0.030 s/op
Iteration   4: 0.031 s/op
Iteration   5: 0.031 s/op

# Run progress: 26.00% complete, ETA 01:31:35
# Fork: 4 of 5
# Warmup Iteration   1: 0.046 s/op
# Warmup Iteration   2: 0.040 s/op
# Warmup Iteration   3: 0.031 s/op
# Warmup Iteration   4: 0.038 s/op
# Warmup Iteration   5: 0.028 s/op
Iteration   1: 0.028 s/op
Iteration   2: 0.028 s/op
Iteration   3: 0.029 s/op
Iteration   4: 0.029 s/op
Iteration   5: 0.030 s/op

# Run progress: 28.00% complete, ETA 01:29:40
# Fork: 5 of 5
# Warmup Iteration   1: 0.260 s/op
# Warmup Iteration   2: 0.052 s/op
# Warmup Iteration   3: 0.044 s/op
# Warmup Iteration   4: 0.046 s/op
# Warmup Iteration   5: 0.040 s/op
Iteration   1: 0.031 s/op
Iteration   2: 0.035 s/op
Iteration   3: 0.028 s/op
Iteration   4: 0.028 s/op
Iteration   5: 0.029 s/op


Result "org.sample.FilterBenchmark.Filter":
  0.030 ±(99.9%) 0.003 s/op [Average]
  (min, avg, max) = (0.028, 0.030, 0.049), stdev = 0.004
  CI (99.9%): [0.027, 0.034] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_181, OpenJDK 64-Bit Server VM, 25.181-b13
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -XX:+UseParallelGC -XX:ParallelGCThreads=72 -Djava.util.concurrent.ForkJoinPool.common.parallelism=72
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.sample.HistogramBenchmark.Histogram

# Run progress: 30.00% complete, ETA 01:27:45
# Fork: 1 of 5
# Warmup Iteration   1: 5.890 s/op
# Warmup Iteration   2: 1.430 s/op
# Warmup Iteration   3: 1.050 s/op
# Warmup Iteration   4: 0.562 s/op
# Warmup Iteration   5: 0.620 s/op
Iteration   1: 0.555 s/op
Iteration   2: 0.486 s/op
Iteration   3: 0.677 s/op
Iteration   4: 0.484 s/op
Iteration   5: 0.396 s/op

# Run progress: 32.00% complete, ETA 01:26:15
# Fork: 2 of 5
# Warmup Iteration   1: 6.377 s/op
# Warmup Iteration   2: 7.092 s/op
# Warmup Iteration   3: 8.839 s/op
# Warmup Iteration   4: 6.510 s/op
# Warmup Iteration   5: 3.517 s/op
Iteration   1: 3.901 s/op
Iteration   2: 2.655 s/op
Iteration   3: 3.134 s/op
Iteration   4: 3.172 s/op
Iteration   5: 1.902 s/op

# Run progress: 34.00% complete, ETA 01:29:32
# Fork: 3 of 5
# Warmup Iteration   1: 6.765 s/op
# Warmup Iteration   2: 1.128 s/op
# Warmup Iteration   3: 0.775 s/op
# Warmup Iteration   4: 0.714 s/op
# Warmup Iteration   5: 0.532 s/op
Iteration   1: 0.793 s/op
Iteration   2: 0.589 s/op
Iteration   3: 0.785 s/op
Iteration   4: 0.487 s/op
Iteration   5: 0.421 s/op

# Run progress: 36.00% complete, ETA 01:27:21
# Fork: 4 of 5
# Warmup Iteration   1: 5.503 s/op
# Warmup Iteration   2: 1.449 s/op
# Warmup Iteration   3: 0.834 s/op
# Warmup Iteration   4: 0.544 s/op
# Warmup Iteration   5: 0.507 s/op
Iteration   1: 0.713 s/op
Iteration   2: 0.572 s/op
Iteration   3: 0.564 s/op
Iteration   4: 0.368 s/op
Iteration   5: 0.405 s/op

# Run progress: 38.00% complete, ETA 01:24:43
# Fork: 5 of 5
# Warmup Iteration   1: 3.936 s/op
# Warmup Iteration   2: 0.461 s/op
# Warmup Iteration   3: 0.422 s/op
# Warmup Iteration   4: 0.402 s/op
# Warmup Iteration   5: 0.426 s/op
Iteration   1: 4.135 s/op
Iteration   2: 1.190 s/op
Iteration   3: 1.592 s/op
Iteration   4: 1.780 s/op
Iteration   5: 1.467 s/op


Result "org.sample.HistogramBenchmark.Histogram":
  1.329 ±(99.9%) 0.876 s/op [Average]
  (min, avg, max) = (0.368, 1.329, 4.135), stdev = 1.170
  CI (99.9%): [0.453, 2.205] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_181, OpenJDK 64-Bit Server VM, 25.181-b13
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -XX:+UseParallelGC -XX:ParallelGCThreads=72 -Djava.util.concurrent.ForkJoinPool.common.parallelism=72
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.sample.MapMutBenchmark.MapMut

# Run progress: 40.00% complete, ETA 01:23:15
# Fork: 1 of 5
# Warmup Iteration   1: 31.986 s/op
# Warmup Iteration   2: 35.004 s/op
# Warmup Iteration   3: 31.076 s/op
# Warmup Iteration   4: 13.163 s/op
# Warmup Iteration   5: 1.936 s/op
Iteration   1: 23.586 s/op
Iteration   2: 6.036 s/op
Iteration   3: 4.884 s/op
Iteration   4: 3.119 s/op
Iteration   5: 6.886 s/op

# Run progress: 42.00% complete, ETA 01:27:44
# Fork: 2 of 5
# Warmup Iteration   1: 55.049 s/op
# Warmup Iteration   2: 0.407 s/op
# Warmup Iteration   3: 28.910 s/op
# Warmup Iteration   4: 12.234 s/op
# Warmup Iteration   5: 11.296 s/op
Iteration   1: 17.243 s/op
Iteration   2: 11.874 s/op
Iteration   3: 13.246 s/op
Iteration   4: 9.114 s/op
Iteration   5: 4.410 s/op

# Run progress: 44.00% complete, ETA 01:27:30
# Fork: 3 of 5
# Warmup Iteration   1: 15.027 s/op
# Warmup Iteration   2: 50.902 s/op
# Warmup Iteration   3: 66.987 s/op
# Warmup Iteration   4: 0.084 s/op
# Warmup Iteration   5: 0.237 s/op
Iteration   1: 0.327 s/op
Iteration   2: 0.225 s/op
Iteration   3: 0.112 s/op
Iteration   4: 0.411 s/op
Iteration   5: 0.383 s/op

# Run progress: 46.00% complete, ETA 01:26:21
# Fork: 4 of 5
# Warmup Iteration   1: 11.400 s/op
# Warmup Iteration   2: 54.356 s/op
# Warmup Iteration   3: 59.344 s/op
# Warmup Iteration   4: 5.379 s/op
# Warmup Iteration   5: 6.231 s/op
Iteration   1: 1.135 s/op
Iteration   2: 19.458 s/op
Iteration   3: 7.314 s/op
Iteration   4: 3.068 s/op
Iteration   5: 4.527 s/op

# Run progress: 48.00% complete, ETA 01:29:10
# Fork: 5 of 5
# Warmup Iteration   1: 23.689 s/op
# Warmup Iteration   2: 85.642 s/op
# Warmup Iteration   3: 30.639 s/op
# Warmup Iteration   4: 31.794 s/op
# Warmup Iteration   5: 12.394 s/op
Iteration   1: 11.468 s/op
Iteration   2: 10.762 s/op
Iteration   3: 5.372 s/op
Iteration   4: 4.749 s/op
Iteration   5: 5.997 s/op


Result "org.sample.MapMutBenchmark.MapMut":
  7.028 ±(99.9%) 4.722 s/op [Average]
  (min, avg, max) = (0.112, 7.028, 23.586), stdev = 6.303
  CI (99.9%): [2.307, 11.750] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_181, OpenJDK 64-Bit Server VM, 25.181-b13
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -XX:+UseParallelGC -XX:ParallelGCThreads=72 -Djava.util.concurrent.ForkJoinPool.common.parallelism=72
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.sample.MatrixMultiplyBenchmark.MatrixMultiply

# Run progress: 50.00% complete, ETA 01:30:29
# Fork: 1 of 5
# Warmup Iteration   1: 0.340 s/op
# Warmup Iteration   2: 0.312 s/op
# Warmup Iteration   3: 0.306 s/op
# Warmup Iteration   4: 0.300 s/op
# Warmup Iteration   5: 0.300 s/op
Iteration   1: 0.302 s/op
Iteration   2: 0.308 s/op
Iteration   3: 0.299 s/op
Iteration   4: 0.301 s/op
Iteration   5: 0.300 s/op

# Run progress: 52.00% complete, ETA 01:25:07
# Fork: 2 of 5
# Warmup Iteration   1: 0.336 s/op
# Warmup Iteration   2: 0.288 s/op
# Warmup Iteration   3: 0.304 s/op
# Warmup Iteration   4: 0.302 s/op
# Warmup Iteration   5: 0.303 s/op
Iteration   1: 0.302 s/op
Iteration   2: 0.305 s/op
Iteration   3: 0.305 s/op
Iteration   4: 0.295 s/op
Iteration   5: 0.286 s/op

# Run progress: 54.00% complete, ETA 01:20:00
# Fork: 3 of 5
# Warmup Iteration   1: 0.338 s/op
# Warmup Iteration   2: 0.282 s/op
# Warmup Iteration   3: 0.295 s/op
# Warmup Iteration   4: 0.298 s/op
# Warmup Iteration   5: 0.307 s/op
Iteration   1: 0.313 s/op
Iteration   2: 0.308 s/op
Iteration   3: 0.293 s/op
Iteration   4: 0.302 s/op
Iteration   5: 0.293 s/op

# Run progress: 56.00% complete, ETA 01:15:07
# Fork: 4 of 5
# Warmup Iteration   1: 0.327 s/op
# Warmup Iteration   2: 0.286 s/op
# Warmup Iteration   3: 0.268 s/op
# Warmup Iteration   4: 0.274 s/op
# Warmup Iteration   5: 0.271 s/op
Iteration   1: 0.279 s/op
Iteration   2: 0.309 s/op
Iteration   3: 0.297 s/op
Iteration   4: 0.301 s/op
Iteration   5: 0.297 s/op

# Run progress: 58.00% complete, ETA 01:10:28
# Fork: 5 of 5
# Warmup Iteration   1: 0.335 s/op
# Warmup Iteration   2: 0.299 s/op
# Warmup Iteration   3: 0.295 s/op
# Warmup Iteration   4: 0.303 s/op
# Warmup Iteration   5: 0.289 s/op
Iteration   1: 0.303 s/op
Iteration   2: 0.311 s/op
Iteration   3: 0.302 s/op
Iteration   4: 0.309 s/op
Iteration   5: 0.310 s/op


Result "org.sample.MatrixMultiplyBenchmark.MatrixMultiply":
  0.301 ±(99.9%) 0.006 s/op [Average]
  (min, avg, max) = (0.279, 0.301, 0.313), stdev = 0.008
  CI (99.9%): [0.295, 0.307] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_181, OpenJDK 64-Bit Server VM, 25.181-b13
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -XX:+UseParallelGC -XX:ParallelGCThreads=72 -Djava.util.concurrent.ForkJoinPool.common.parallelism=72
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.sample.ReduceBenchmark.Reduce

# Run progress: 60.00% complete, ETA 01:06:00
# Fork: 1 of 5
# Warmup Iteration   1: 42.064 s/op
# Warmup Iteration   2: 0.080 s/op
# Warmup Iteration   3: 0.075 s/op
# Warmup Iteration   4: 0.074 s/op
# Warmup Iteration   5: 0.075 s/op
Iteration   1: 0.075 s/op
Iteration   2: 0.075 s/op
Iteration   3: 0.075 s/op
Iteration   4: 0.075 s/op
Iteration   5: 0.075 s/op

# Run progress: 62.00% complete, ETA 01:02:18
# Fork: 2 of 5
# Warmup Iteration   1: 3.014 s/op
# Warmup Iteration   2: 1.282 s/op
# Warmup Iteration   3: 0.801 s/op
# Warmup Iteration   4: 0.432 s/op
# Warmup Iteration   5: 0.335 s/op
Iteration   1: 0.446 s/op
Iteration   2: 0.076 s/op
Iteration   3: 0.076 s/op
Iteration   4: 0.078 s/op
Iteration   5: 0.075 s/op

# Run progress: 64.00% complete, ETA 00:58:46
# Fork: 3 of 5
# Warmup Iteration   1: 11.264 s/op
# Warmup Iteration   2: 1.718 s/op
# Warmup Iteration   3: 0.419 s/op
# Warmup Iteration   4: 0.607 s/op
# Warmup Iteration   5: 0.447 s/op
Iteration   1: 0.340 s/op
Iteration   2: 0.076 s/op
Iteration   3: 0.071 s/op
Iteration   4: 0.075 s/op
Iteration   5: 0.072 s/op

# Run progress: 66.00% complete, ETA 00:55:04
# Fork: 4 of 5
# Warmup Iteration   1: 2.786 s/op
# Warmup Iteration   2: 1.199 s/op
# Warmup Iteration   3: 0.610 s/op
# Warmup Iteration   4: 0.362 s/op
# Warmup Iteration   5: 0.294 s/op
Iteration   1: 0.094 s/op
Iteration   2: 0.075 s/op
Iteration   3: 0.073 s/op
Iteration   4: 0.074 s/op
Iteration   5: 0.076 s/op

# Run progress: 68.00% complete, ETA 00:51:37
# Fork: 5 of 5
# Warmup Iteration   1: 2.338 s/op
# Warmup Iteration   2: 0.885 s/op
# Warmup Iteration   3: 0.347 s/op
# Warmup Iteration   4: 0.594 s/op
# Warmup Iteration   5: 0.379 s/op
Iteration   1: 0.095 s/op
Iteration   2: 0.073 s/op
Iteration   3: 0.074 s/op
Iteration   4: 0.074 s/op
Iteration   5: 0.075 s/op


Result "org.sample.ReduceBenchmark.Reduce":
  0.102 ±(99.9%) 0.067 s/op [Average]
  (min, avg, max) = (0.071, 0.102, 0.446), stdev = 0.089
  CI (99.9%): [0.035, 0.169] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_181, OpenJDK 64-Bit Server VM, 25.181-b13
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -XX:+UseParallelGC -XX:ParallelGCThreads=72 -Djava.util.concurrent.ForkJoinPool.common.parallelism=72
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.sample.ScanBenchmark.Scan

# Run progress: 70.00% complete, ETA 00:48:12
# Fork: 1 of 5
# Warmup Iteration   1: 16.149 s/op
# Warmup Iteration   2: 54.071 s/op
# Warmup Iteration   3: 24.744 s/op
# Warmup Iteration   4: 11.378 s/op
# Warmup Iteration   5: 17.337 s/op
Iteration   1: 7.137 s/op
Iteration   2: 0.574 s/op
Iteration   3: 0.593 s/op
Iteration   4: 0.584 s/op
Iteration   5: 0.586 s/op

# Run progress: 72.00% complete, ETA 00:45:16
# Fork: 2 of 5
# Warmup Iteration   1: 15.123 s/op
# Warmup Iteration   2: 39.686 s/op
# Warmup Iteration   3: 24.235 s/op
# Warmup Iteration   4: 44.102 s/op
# Warmup Iteration   5: 22.359 s/op
Iteration   1: 33.318 s/op
Iteration   2: 0.592 s/op
Iteration   3: 0.608 s/op
Iteration   4: 0.630 s/op
Iteration   5: 0.614 s/op

# Run progress: 74.00% complete, ETA 00:42:33
# Fork: 3 of 5
# Warmup Iteration   1: 14.793 s/op
# Warmup Iteration   2: 21.740 s/op
# Warmup Iteration   3: 16.453 s/op
# Warmup Iteration   4: 41.741 s/op
# Warmup Iteration   5: 5.144 s/op
Iteration   1: 15.829 s/op
Iteration   2: 11.207 s/op
Iteration   3: 0.590 s/op
Iteration   4: 0.580 s/op
Iteration   5: 0.590 s/op

# Run progress: 76.00% complete, ETA 00:39:25
# Fork: 4 of 5
# Warmup Iteration   1: 14.962 s/op
# Warmup Iteration   2: 55.253 s/op
# Warmup Iteration   3: 28.958 s/op
# Warmup Iteration   4: 25.588 s/op
# Warmup Iteration   5: 37.330 s/op
Iteration   1: 8.686 s/op
Iteration   2: 0.570 s/op
Iteration   3: 0.595 s/op
Iteration   4: 0.546 s/op
Iteration   5: 0.633 s/op

# Run progress: 78.00% complete, ETA 00:36:29
# Fork: 5 of 5
# Warmup Iteration   1: 14.312 s/op
# Warmup Iteration   2: 58.842 s/op
# Warmup Iteration   3: 43.916 s/op
# Warmup Iteration   4: 43.020 s/op
# Warmup Iteration   5: 20.082 s/op
Iteration   1: 5.871 s/op
Iteration   2: 0.621 s/op
Iteration   3: 0.645 s/op
Iteration   4: 0.622 s/op
Iteration   5: 0.640 s/op


Result "org.sample.ScanBenchmark.Scan":
  3.738 ±(99.9%) 5.523 s/op [Average]
  (min, avg, max) = (0.546, 3.738, 33.318), stdev = 7.373
  CI (99.9%): [≈ 0, 9.261] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_181, OpenJDK 64-Bit Server VM, 25.181-b13
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -XX:+UseParallelGC -XX:ParallelGCThreads=72 -Djava.util.concurrent.ForkJoinPool.common.parallelism=72
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.sample.SortBenchmark.Sort

# Run progress: 80.00% complete, ETA 00:33:27
# Fork: 1 of 5
# Warmup Iteration   1: 1.235 s/op
# Warmup Iteration   2: 0.448 s/op
# Warmup Iteration   3: 0.407 s/op
# Warmup Iteration   4: 0.383 s/op
# Warmup Iteration   5: 0.406 s/op
Iteration   1: 0.401 s/op
Iteration   2: 0.386 s/op
Iteration   3: 0.445 s/op
Iteration   4: 0.473 s/op
Iteration   5: 0.478 s/op

# Run progress: 82.00% complete, ETA 00:30:07
# Fork: 2 of 5
# Warmup Iteration   1: 1.832 s/op
# Warmup Iteration   2: 0.467 s/op
# Warmup Iteration   3: 0.434 s/op
# Warmup Iteration   4: 0.381 s/op
# Warmup Iteration   5: 0.407 s/op
Iteration   1: 0.434 s/op
Iteration   2: 0.474 s/op
Iteration   3: 0.478 s/op
Iteration   4: 0.469 s/op
Iteration   5: 0.463 s/op

# Run progress: 84.00% complete, ETA 00:26:49
# Fork: 3 of 5
# Warmup Iteration   1: 1.924 s/op
# Warmup Iteration   2: 0.467 s/op
# Warmup Iteration   3: 0.440 s/op
# Warmup Iteration   4: 0.406 s/op
# Warmup Iteration   5: 0.412 s/op
Iteration   1: 0.421 s/op
Iteration   2: 0.408 s/op
Iteration   3: 0.467 s/op
Iteration   4: 0.421 s/op
Iteration   5: 0.434 s/op

# Run progress: 86.00% complete, ETA 00:23:30
# Fork: 4 of 5
# Warmup Iteration   1: 2.787 s/op
# Warmup Iteration   2: 0.471 s/op
# Warmup Iteration   3: 0.418 s/op
# Warmup Iteration   4: 0.395 s/op
# Warmup Iteration   5: 0.420 s/op
Iteration   1: 0.449 s/op
Iteration   2: 0.449 s/op
Iteration   3: 0.516 s/op
Iteration   4: 0.485 s/op
Iteration   5: 0.479 s/op

# Run progress: 88.00% complete, ETA 00:20:12
# Fork: 5 of 5
# Warmup Iteration   1: 1.771 s/op
# Warmup Iteration   2: 0.553 s/op
# Warmup Iteration   3: 0.417 s/op
# Warmup Iteration   4: 0.433 s/op
# Warmup Iteration   5: 0.374 s/op
Iteration   1: 0.435 s/op
Iteration   2: 0.482 s/op
Iteration   3: 0.501 s/op
Iteration   4: 0.518 s/op
Iteration   5: 0.534 s/op


Result "org.sample.SortBenchmark.Sort":
  0.460 ±(99.9%) 0.028 s/op [Average]
  (min, avg, max) = (0.386, 0.460, 0.534), stdev = 0.037
  CI (99.9%): [0.432, 0.488] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_181, OpenJDK 64-Bit Server VM, 25.181-b13
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -XX:+UseParallelGC -XX:ParallelGCThreads=72 -Djava.util.concurrent.ForkJoinPool.common.parallelism=72
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.sample.TabulateBenchmark.Tabulate

# Run progress: 90.00% complete, ETA 00:16:54
# Fork: 1 of 5
# Warmup Iteration   1: 54.541 s/op
# Warmup Iteration   2: 42.101 s/op
# Warmup Iteration   3: 43.405 s/op
# Warmup Iteration   4: 18.501 s/op
# Warmup Iteration   5: 11.684 s/op
Iteration   1: 21.552 s/op
Iteration   2: 8.943 s/op
Iteration   3: 0.500 s/op
Iteration   4: 0.510 s/op
Iteration   5: 0.568 s/op

# Run progress: 92.00% complete, ETA 00:13:36
# Fork: 2 of 5
# Warmup Iteration   1: 50.619 s/op
# Warmup Iteration   2: 40.659 s/op
# Warmup Iteration   3: 53.121 s/op
# Warmup Iteration   4: 15.357 s/op
# Warmup Iteration   5: 1.670 s/op
Iteration   1: 0.479 s/op
Iteration   2: 0.528 s/op
Iteration   3: 0.495 s/op
Iteration   4: 0.503 s/op
Iteration   5: 0.501 s/op

# Run progress: 94.00% complete, ETA 00:10:13
# Fork: 3 of 5
# Warmup Iteration   1: 17.556 s/op
# Warmup Iteration   2: 35.810 s/op
# Warmup Iteration   3: 52.084 s/op
# Warmup Iteration   4: 5.331 s/op
# Warmup Iteration   5: 4.301 s/op
Iteration   1: 0.512 s/op
Iteration   2: 0.491 s/op
Iteration   3: 0.536 s/op
Iteration   4: 0.527 s/op
Iteration   5: 0.511 s/op

# Run progress: 96.00% complete, ETA 00:06:48
# Fork: 4 of 5
# Warmup Iteration   1: 45.936 s/op
# Warmup Iteration   2: 33.341 s/op
# Warmup Iteration   3: 52.626 s/op
# Warmup Iteration   4: 15.828 s/op
# Warmup Iteration   5: 13.374 s/op
Iteration   1: 7.655 s/op
Iteration   2: 5.744 s/op
Iteration   3: 0.458 s/op
Iteration   4: 0.473 s/op
Iteration   5: 0.459 s/op

# Run progress: 98.00% complete, ETA 00:03:24
# Fork: 5 of 5
# Warmup Iteration   1: 44.182 s/op
# Warmup Iteration   2: 33.196 s/op
# Warmup Iteration   3: 43.788 s/op
# Warmup Iteration   4: 13.860 s/op
# Warmup Iteration   5: 15.806 s/op
Iteration   1: 5.034 s/op
Iteration   2: 1.292 s/op
Iteration   3: 0.523 s/op
Iteration   4: 0.504 s/op
Iteration   5: 0.533 s/op


Result "org.sample.TabulateBenchmark.Tabulate":
  2.393 ±(99.9%) 3.503 s/op [Average]
  (min, avg, max) = (0.458, 2.393, 21.552), stdev = 4.676
  CI (99.9%): [≈ 0, 5.896] (assumes normal distribution)


# Run complete. Total time: 02:50:16

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                               Mode  Cnt  Score    Error  Units
ConcHashBenchmark.ConcHash              avgt   25  1.013 ±  0.636   s/op
FibBenchmark.Fib                        avgt   25  0.027 ±  0.001   s/op
FilterBenchmark.Filter                  avgt   25  0.030 ±  0.003   s/op
HistogramBenchmark.Histogram            avgt   25  1.329 ±  0.876   s/op
MapMutBenchmark.MapMut                  avgt   25  7.028 ±  4.722   s/op
MatrixMultiplyBenchmark.MatrixMultiply  avgt   25  0.301 ±  0.006   s/op
ReduceBenchmark.Reduce                  avgt   25  0.102 ±  0.067   s/op
ScanBenchmark.Scan                      avgt   25  3.738 ±  5.523   s/op
SortBenchmark.Sort                      avgt   25  0.460 ±  0.028   s/op
TabulateBenchmark.Tabulate              avgt   25  2.393 ±  3.503   s/op
