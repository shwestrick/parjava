# JMH version: 1.21
# VM version: JDK 1.8.0_181, OpenJDK 64-Bit Server VM, 25.181-b13
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -XX:+UseG1GC -XX:ParallelGCThreads=1 -Djava.util.concurrent.ForkJoinPool.common.parallelism=1
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.sample.FibBenchmark.Fib

# Run progress: 0.00% complete, ETA 00:02:30
# Fork: 1 of 1
# Warmup Iteration   1: 1.460 s/op
# Warmup Iteration   2: 1.210 s/op
# Warmup Iteration   3: 1.349 s/op
# Warmup Iteration   4: 1.318 s/op
# Warmup Iteration   5: 1.255 s/op
Iteration   1: 1.326 s/op
Iteration   2: 1.261 s/op
Iteration   3: 1.350 s/op
Iteration   4: 1.259 s/op
Iteration   5: 1.219 s/op
Iteration   6: 1.263 s/op
Iteration   7: 1.380 s/op
Iteration   8: 1.489 s/op
Iteration   9: 1.505 s/op
Iteration  10: 1.294 s/op


Result "org.sample.FibBenchmark.Fib":
  1.335 ±(99.9%) 0.148 s/op [Average]
  (min, avg, max) = (1.219, 1.335, 1.505), stdev = 0.098
  CI (99.9%): [1.186, 1.483] (assumes normal distribution)


# Run complete. Total time: 00:02:40

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark         Mode  Cnt  Score   Error  Units
FibBenchmark.Fib  avgt   10  1.335 ± 0.148   s/op
