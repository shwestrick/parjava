# JMH version: 1.21
# VM version: JDK 1.8.0_181, OpenJDK 64-Bit Server VM, 25.181-b13
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -XX:+UseG1GC -XX:ParallelGCThreads=72 -Djava.util.concurrent.ForkJoinPool.common.parallelism=72
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.sample.ConcHashBenchmark.ConcHash

# Run progress: 0.00% complete, ETA 00:07:30
# Fork: 1 of 1
# Warmup Iteration   1: 0.700 s/op
# Warmup Iteration   2: 0.678 s/op
# Warmup Iteration   3: 0.734 s/op
# Warmup Iteration   4: 0.803 s/op
# Warmup Iteration   5: 0.797 s/op
Iteration   1: 0.723 s/op
Iteration   2: 0.672 s/op
Iteration   3: 0.598 s/op
Iteration   4: 0.788 s/op
Iteration   5: 0.694 s/op
Iteration   6: 0.644 s/op
Iteration   7: 0.686 s/op
Iteration   8: 0.720 s/op
Iteration   9: 0.711 s/op
Iteration  10: 0.729 s/op


Result "org.sample.ConcHashBenchmark.ConcHash":
  0.697 ±(99.9%) 0.078 s/op [Average]
  (min, avg, max) = (0.598, 0.697, 0.788), stdev = 0.052
  CI (99.9%): [0.618, 0.775] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_181, OpenJDK 64-Bit Server VM, 25.181-b13
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -XX:+UseG1GC -XX:ParallelGCThreads=72 -Djava.util.concurrent.ForkJoinPool.common.parallelism=72
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.sample.FilterBenchmark.Filter

# Run progress: 33.33% complete, ETA 00:05:18
# Fork: 1 of 1
# Warmup Iteration   1: 0.127 s/op
# Warmup Iteration   2: 0.097 s/op
# Warmup Iteration   3: 0.094 s/op
# Warmup Iteration   4: 0.094 s/op
# Warmup Iteration   5: 0.095 s/op
Iteration   1: 0.102 s/op
Iteration   2: 0.106 s/op
Iteration   3: 0.093 s/op
Iteration   4: 0.096 s/op
Iteration   5: 0.098 s/op
Iteration   6: 0.099 s/op
Iteration   7: 0.099 s/op
Iteration   8: 0.106 s/op
Iteration   9: 0.099 s/op
Iteration  10: 0.100 s/op


Result "org.sample.FilterBenchmark.Filter":
  0.100 ±(99.9%) 0.006 s/op [Average]
  (min, avg, max) = (0.093, 0.100, 0.106), stdev = 0.004
  CI (99.9%): [0.094, 0.106] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_181, OpenJDK 64-Bit Server VM, 25.181-b13
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -XX:+UseG1GC -XX:ParallelGCThreads=72 -Djava.util.concurrent.ForkJoinPool.common.parallelism=72
# Warmup: 5 iterations, 10 s each
# Measurement: 10 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.sample.HistogramBenchmark.Histogram

# Run progress: 66.67% complete, ETA 00:02:36
# Fork: 1 of 1
# Warmup Iteration   1: 1.296 s/op
# Warmup Iteration   2: 1.104 s/op
# Warmup Iteration   3: 1.034 s/op
# Warmup Iteration   4: 1.064 s/op
# Warmup Iteration   5: 1.467 s/op
Iteration   1: 1.226 s/op
Iteration   2: 1.082 s/op
Iteration   3: 1.321 s/op
Iteration   4: 1.224 s/op
Iteration   5: 1.129 s/op
Iteration   6: 1.138 s/op
Iteration   7: 1.114 s/op
Iteration   8: 1.500 s/op
Iteration   9: 1.299 s/op
Iteration  10: 1.465 s/op


Result "org.sample.HistogramBenchmark.Histogram":
  1.250 ±(99.9%) 0.221 s/op [Average]
  (min, avg, max) = (1.082, 1.250, 1.500), stdev = 0.146
  CI (99.9%): [1.029, 1.470] (assumes normal distribution)


# Run complete. Total time: 00:07:58

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                     Mode  Cnt  Score   Error  Units
ConcHashBenchmark.ConcHash    avgt   10  0.697 ± 0.078   s/op
FilterBenchmark.Filter        avgt   10  0.100 ± 0.006   s/op
HistogramBenchmark.Histogram  avgt   10  1.250 ± 0.221   s/op
